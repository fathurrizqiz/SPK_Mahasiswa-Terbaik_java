/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package saw;

import java.awt.Frame;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LABKOM
 */
public class MainApp extends javax.swing.JFrame {

    /**
     * Creates new form MainApp
     */
    public MainApp() {
        initComponents();
        loadAlternatif("");
        loadkriteria("");
        SAW();
        loadlabel_kriteria("");
    }
    
    public enum label {
            benefit,
            cost
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btnkriteria = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TableNormalisasi = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TablePreferensi = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jButton1.setText("Tambah Data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(558, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(28, 28, 28))
        );

        jPanel2.add(jPanel5, java.awt.BorderLayout.PAGE_START);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Alternatif", jPanel2);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jButton3.setText("Tambah Penilaian");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("jButton4");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(546, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(32, 32, 32))
        );

        jPanel3.add(jPanel6, java.awt.BorderLayout.PAGE_START);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel3.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Penilaian", jPanel3);

        jPanel4.setLayout(new java.awt.BorderLayout());

        btnkriteria.setText("Tambah Kriteria");
        btnkriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnkriteriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(btnkriteria)
                .addContainerGap(628, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(btnkriteria)
                .addGap(37, 37, 37))
        );

        jPanel4.add(jPanel7, java.awt.BorderLayout.PAGE_START);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        jPanel4.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Kriteria", jPanel4);

        TableNormalisasi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(TableNormalisasi);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Normalisasi", jPanel8);

        TablePreferensi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(TablePreferensi);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Preferensi", jPanel9);

        jTabbedPane1.addTab("proses SPK", jTabbedPane3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        setSize(new java.awt.Dimension(772, 696));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        TambahAlternatif TA = new TambahAlternatif(MainApp.this, true);
        TA.setVisible(true); 
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        TambahNilai TN = new TambahNilai(MainApp.this, true);
        TN.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnkriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnkriteriaActionPerformed
        // TODO add your handling code here:
        TambahKriteria TK = new TambahKriteria(MainApp.this,true);
        TK.setVisible(true);
    }//GEN-LAST:event_btnkriteriaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            MainApp m = new MainApp();
            m.setExtendedState(Frame.MAXIMIZED_BOTH);
            m.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableNormalisasi;
    private javax.swing.JTable TablePreferensi;
    private javax.swing.JButton btnkriteria;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private static javax.swing.JTable jTable1;
    private static javax.swing.JTable jTable2;
    private static javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables

    public static void loadAlternatif(String where) {
        try {
            
            
            
            Object[] kolom = {"ID","NAME","ALTERNATIF"};
            Object[][] data = null;
            DefaultTableModel model = new DefaultTableModel(data,kolom);
            jTable1.setModel(model); 
            
            Connection k = Koneksi.Go();
            Statement st = k.createStatement();
            var q = "SELECT * FROM alternatif "+where;
            ResultSet r = st.executeQuery(q);
            while (r.next()) {
                var id = r.getInt("id");
                var name = r.getString("name");
                var prodi = r.getString("prodi");
                Object[] d = {id, name, prodi};
                model.addRow(d); 
            }
        } catch (SQLException e) {
        }
    }
    
    public static void loadkriteria(String where) {
        try {
            
            
            
            Object[] kolom = {"ID","alt_id","ipk","kedisiplinan","kehadiran","organisasi","kompetensi","sikap"};
            Object[][] data = null;
            DefaultTableModel model = new DefaultTableModel(data,kolom);
            jTable2.setModel(model); 
            
            Connection k = Koneksi.Go();
            Statement st = k.createStatement();
            var A = "SELECT * FROM kriteria "+where;
            ResultSet r = st.executeQuery(A);
            while (r.next()) {
                var id = r.getInt("id");
                var alt_id = r.getInt("alt_id");
                
                var ipk = r.getDouble("ipk");
                var kedisiplinan = r.getInt("kedisiplinan");
                var kehadiran = r.getInt("kehadiran");
                var organisasi = r.getInt("organisasi");
                var kompetensi = r.getInt("kompetensi");
                var sikap = r.getInt("sikap");
                Object[] d = {id,alt_id, ipk, kedisiplinan, kehadiran, organisasi, kompetensi, sikap};
                model.addRow(d); 
            }
        } catch (SQLException e) {
            e.printStackTrace();
        System.out.println("SQLException: " + e.getMessage());
        }
    }
    
    public static void loadlabel_kriteria(String where) {
        
        try {
            
            
            
            Object[] kolom = {"ID","kriteria","label","bobot"};
            Object[][] data = null;
            DefaultTableModel model = new DefaultTableModel(data,kolom);
            jTable3.setModel(model); 
            
            Connection k = Koneksi.Go();
            Statement st = k.createStatement();
            var B = "SELECT * FROM kriteria_label "+where;
            ResultSet r = st.executeQuery(B);
            while (r.next()) {
                var id = r.getInt("id");
                var kriteria = r.getString("kriteria");
                var label = r.getString("label");
                var bobot = r.getFloat("bobot");
                Object[] d = {id,kriteria, label, bobot};
                model.addRow(d); 
            }
        } catch (SQLException e) {
            e.printStackTrace();
        System.out.println("SQLException: " + e.getMessage());
        }
    }


/**
 * 
 * @param kolom
 * @param opsi 1=min, 2=max
 * @return 
 */
    private double min_max(String kolom, int opsi){
        double ipk=0;
        try {
            Connection k = Koneksi.Go();
            Statement st = k.createStatement();
            String q;
            if(opsi == 1){
                q = "SELECT MIN("+kolom+") AS val FROM kriteria";
            }else {
                q = "SELECT MAX("+kolom+") AS val FROM kriteria";
            }            
            ResultSet r = st.executeQuery(q);
            
            while (r.next()) {
                ipk = r.getDouble("val");                
            }
            return ipk;
        } catch (SQLException e) {
        }
        return ipk;
    }
    
    /**
     * 
     * @param kolom
     * @param opsi 1=cost, 2=benefit 
     * @return 
     */
    private String cost_benefit(String kolom){
        String label="benefit";
        try {
            Connection k = Koneksi.Go();
            Statement st = k.createStatement();
            var q = "SELECT label FROM kriteria_label WHERE kriteria='"+kolom+"'";            
            ResultSet r = st.executeQuery(q);            
            while (r.next()) {
                label = r.getString(kolom);                
            }
            return label;
        } catch (SQLException e) {
        }
        return label;
    }
    
    
    private void SAW(){
        try {
            Connection k = Koneksi.Go();
            Statement st = k.createStatement();
            var q = "SELECT * FROM kriteria";
            ResultSet r = st.executeQuery(q);
            
            Object[] kolom = {"ID","preferensi"};
            Object[][] data = null;
            DefaultTableModel model = new DefaultTableModel(data,kolom);
            TablePreferensi.setModel(model); 
            
            Object[] kolomnorm = {"ID","IPK","kedisiplinan","kehadiran","organisasi","kompetensi","sikap"};
            Object[][] data1 = null;
            DefaultTableModel model1 = new DefaultTableModel(data1,kolomnorm);
            TableNormalisasi.setModel(model1); 
            
            
            while (r.next()) {                 
                var id = r.getInt("id");
                var alt_id = r.getInt("alt_id");
                var ipk  = r.getDouble("ipk");	
                var kedisiplinan  = r.getInt("kedisiplinan");	
                var kehadiran 	 = r.getInt("kehadiran");
                var organisasi 	 = r.getInt("organisasi");
                var kompetensi 	 = r.getInt("kompetensi");
                var sikap 	 = r.getInt("sikap");
                System.out.println("IPK ");
                System.out.println(ipk);
                System.out.println("kedisiplinan :");
                System.out.println(kedisiplinan);
                System.out.println("kehadiran :");
                System.out.println(kehadiran);
                System.out.println("organisasi :");
                System.out.println(organisasi);
                System.out.println("kompetensi");
                System.out.println(kompetensi);
                System.out.println("sikap :");
                System.out.println(sikap);
                
                double norm_ipk = cost_benefit("ipk").equals("benefit") ? ipk/min_max("ipk", 2) : min_max("ipk", 1)/ipk;
                double norm_kedisiplinan = cost_benefit("kedisiplinan").equals("benefit") ? kedisiplinan/min_max("kedisiplinan", 2) : min_max("kedisiplinan", 1)/kedisiplinan;
                double norm_kehadiran = cost_benefit("kehadiran").equals("benefit") ? kehadiran/min_max("kehadiran", 2) : min_max("kehadiran", 1)/kehadiran;
                double norm_organisasi = cost_benefit("organisasi").equals("benefit") ? organisasi/min_max("organisasi", 2) : min_max("organisasi", 1)/organisasi;
                double norm_kompetensi = cost_benefit("kompetensi").equals("benefit") ? kompetensi/min_max("kompetensi", 2) : min_max("kompetensi", 1)/kompetensi;
                double norm_sikap = cost_benefit("sikap").equals("benefit") ? sikap/min_max("sikap", 2) : min_max("sikap", 1)/sikap;
                //System.out.println(min_max("ipk", 2));
                Object[] E = {id, norm_ipk,norm_kedisiplinan,norm_kehadiran,norm_organisasi,norm_kompetensi,norm_sikap};
                model1.addRow(E);
                
                
                double hasil = (norm_ipk*bobot("ipk"))+ (norm_kedisiplinan*bobot("kedisiplinan")) + (norm_kehadiran*bobot("kehadiran")) + (norm_organisasi*bobot("organisasi")) + (norm_kompetensi*bobot("kompetensi")) + (norm_sikap*bobot("sikap"));
                
                System.out.println("Nilai Preferensi :");
                System.out.println(hasil);
                
                Object[] d = {id, hasil};
                model.addRow(d);
            }
            
            
        } catch (Exception e) {
        }
    }
    
    
    
    private double bobot(String kolom){
        double bobot = 0;
        try {
            Connection k = Koneksi.Go();
            Statement st = k.createStatement();
            var q = "SELECT bobot FROM kriteria_label WHERE kriteria='"+kolom+"'";
            ResultSet r = st.executeQuery(q);
            while (r.next()) {                 
                bobot = r.getDouble("bobot");
            }
           return bobot;
        } catch (SQLException e) {
        }
        return bobot;
    }

}
